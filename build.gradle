buildscript {
	ext {
		jcommander_version = '1.78'
		jsonio_version = '4.12.0'
	}
}

plugins {
	id 'java'
	id 'jacoco'

	id "com.github.johnrengelman.shadow" version "5.1.0"
	id "io.freefair.lombok" version "5.1.0"
	id "com.github.spotbugs" version "4.0.6"
}

group 'com.github.marschwar.depvis'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation "com.beust:jcommander:$jcommander_version"
	implementation "com.cedarsoftware:json-io:$jsonio_version"

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation 'org.assertj:assertj-core:3.12+'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
}

ext {
	mainClass = "com.github.marschwar.depvis.Main"
}

jar {
	manifest {
		attributes 'Main-Class': mainClass
	}
}

spotbugs {
	effort = 'max'
}

spotbugsMain {
	reports {
		html.enabled = true
		xml.enabled = false
	}
}

tasks.assemble.dependsOn tasks.shadowJar

task generateGraph(type: Exec) {
	dependsOn classes

	group = "Execution"
	description = "Generate the dependency graph of the project itself"
	standardOutput = new FileOutputStream("${projectDir}/documentation/dependency-graph.html")

	commandLine "java",
			"-classpath",
			sourceSets.main.runtimeClasspath.getAsPath(),
			mainClass,
			"${buildDir}/classes/java/main"

}
