buildscript {
    ext {
        antlr_version = '4.7.2'
    }
}

plugins {
    id 'java'
    id 'antlr'
    id "com.github.johnrengelman.shadow" version "5.1.0"
}

group 'com.github.marschwar.classDependency'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:$antlr_version"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.assertj:assertj-core:3.12+'
}

sourceSets {
    main {
        java.srcDirs += 'build/generated/sources/antlr/main/java'
    }
}

test {
    useJUnitPlatform()
}

generateGrammarSource {
    outputDirectory = file('build/generated/sources/antlr/main/java/com/github/marschwar/classDependency/parser')
    arguments += [
            '-package', 'com.github.marschwar.classDependency.parser',
            '-listener',
            '-long-messages'
    ]
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.marschwar.classDependency.Main'
    }
}

tasks.compileJava.dependsOn tasks.generateGrammarSource
tasks.build.dependsOn tasks.shadowJar

shadowJar {
    dependencies {
        exclude(dependency("org.antlr:antlr4:.*"))
        exclude(dependency("org.antlr:antlr-runtime:.*"))
        exclude(dependency("org.antlr:ST4:.*"))
        exclude(dependency("com.ibm.icu:icu4j:.*"))
        exclude(dependency("org.abego.treelayout:.*"))
    }
}